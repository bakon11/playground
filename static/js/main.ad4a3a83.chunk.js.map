{"version":3,"sources":["JSONValidationErrorList.tsx","examplesList.tsx","MonacoJSONEditor.tsx","fetchUrlSchemaFile.tsx","fetchSchemaFromRpcDiscover.tsx","SnackBar/SnackBar.tsx","SearchBar/SearchBar.tsx","AppBar/AppBar.tsx","themes/openrpcTheme.ts","App.tsx","index.tsx"],"names":["JSONValidationErrorList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","markers","length","react_default","a","createElement","className","wrapper","list","map","marker","key","message","startLineNumber","startColumn","React","Component","withStyles","theme","color","palette","secondary","main","height","listStyle","overflow","maxHeight","examplesList","name","url","empty","require","default","initVimMode","MonacoJSONEditor","monaco","metaSchema","editorInstance","vimMode","statusNode","createRef","addCommands","bind","assertThisInitialized","getModels","modelUri","parse","concat","Math","random","schema","defaultV","_","isEmpty","defaultValue","JSON","stringify","undefined","ex","find","e","fetch","then","res","text","defaultSchema","localStorageSchema","window","localStorage","getItem","trim","model","createModel","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","updateOptions","tabSize","options","language","autoIndent","formatOnPaste","formatOnType","uiSchema","appBar","current","create","objectSpread","setModel","setSelection","focus","onresize","_this2","layout","setTimeout","onDidChangeModelContent","changedSchema","getValue","setItem","onChange","onCreate","editor","_this3","addAction","id","label","keybindings","chord","CtrlCmd","KEY_K","KEY_R","contextMenuGroupId","contextMenuOrder","run","ed","result","prompt","KEY_V","onVimKeybind","onChangeMarkers","getModelMarkers","dispose","innerHTML","document","getElementById","Fragment","style","ref","position","bottom","background","opacity","fetchUrlSchemaFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","schemaUrl","response","wrap","_context","prev","next","sent","abrupt","t0","Error","stop","_x","apply","arguments","idCounter","fetchSchemaFromRpcDiscover","body","jsonrpc","method","params","headers","Content-Type","NotificationType","SearchBar","_this$props","onSplitViewChange","onDarkModeChange","downshift_esm","onInputValueChange","onChangeUrl","query","getInputProps","getItemProps","getMenuProps","getLabelProps","isOpen","inputValue","highlightedIndex","openMenu","selectedItem","clearSelection","index_es","assign","target","value","onFocus","event","placeholder","width","zIndex","maxWidth","suggestions","filter","includes","suggestion","index","isSelected","item","selected","component","fontWeight","container","spacing","xs","variant","title","marginLeft","unit","ApplicationBar","elevation","alignItems","sm","direction","alt","src","only","padding","src_SearchBar_SearchBar","justify","Fullscreen_default","onClick","VerticalSplit_default","Brightness3_default","WbSunny_default","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","debug","SnackBarCntWrapper","onClose","other","objectWithoutProperties","Icon","classNames","aria-describedby","icon","iconVariant","action","IconButton_default","aria-label","close","Close_default","SnackBarContentWrapper","green","backgroundColor","dark","primary","amber","fontSize","marginRight","display","margin","SnackBarWrapper","_this$props2","notification","open","autoHideDuration","anchorOrigin","vertical","horizontal","type","SnackBar","lightTheme","createMuiTheme","overrides","MuiAppBar","root","darkTheme","paper","MuiTable","MuiTypography","App","debouncedHandleUrlChange","setNotification","setState","setErrorNotification","dHandleUrlChange","jsonOrRPC","newSchema","msg","rpcResult","_msg","match","console","t1","setValue","refreshEditorData","handleUrlChange","handleUISchemaAppBarChange","reactJsonOptions","setTheme","defineProperty","getPlayground","getSplitPane","build_default","parsedSchema","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","ui:input","ui:inputPlaceholder","ui:logoUrl","ui:splitView","ui:darkMode","ui:title","methods","ui:defaultExpanded","setMarkers","debounce","handleSnackbarClose","urlParams","qs","location","search","ignoreQueryPrefix","depth","decoder","str","test","parseFloat","decodeURIComponent","refParser","dereference","_context3","refeshMarkers","styles","AppBar","index_esm","split","minSize","maxSize","defaultSize","innerWidth","size","flexDirection","src_JSONValidationErrorList","MonacoJSONEditor_MonacoJSONEditor","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.ad4a3a83.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nclass JSONValidationErrorList extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {};\n  }\n  public render() {\n    const { classes } = this.props;\n    if (!this.props.markers || this.props.markers.length === 0) { return null; }\n    return (\n      <div className={classes.wrapper}>\n        <ul className={classes.list}>\n          {this.props.markers && this.props.markers.map((marker) => {\n            return (\n              <li key={marker.message}>\n                {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","export default [\n  {\n    name: \"api-with-examples\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/api-with-examples-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"link-example\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/link-example-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"params-by-name-petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/params-by-name-petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore-expanded\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-expanded-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"petstore\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-openrpc.json\", //tslint:disable-line\n  },\n  {\n    name: \"simple-math\",\n    url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/simple-math-openrpc.json\", //tslint:disable-line\n  },\n];\n","import React, { ReactNode } from \"react\";\n/* tslint:disable */\nlet empty = require(\"json-schema-empty\");\nempty = empty.default;\nconst { initVimMode } = require(\"monaco-vim\");\n/* tslint:enable */\nimport * as monaco from \"monaco-editor\";\nimport _ from \"lodash\";\nimport { JSONSchema4 } from \"json-schema\";\nimport schema from \"@open-rpc/meta-schema\";\nimport { IUISchema } from \"./UISchema\";\nimport examplesList from \"./examplesList\";\n\ninterface IProps {\n  defaultValue?: string;\n  onChangeMarkers?: any;\n  uiSchema: IUISchema;\n  onCreate?: any;\n  onChange?: any;\n}\n\nexport default class MonacoJSONEditor extends React.Component<IProps> {\n  private monaco: React.RefObject<HTMLDivElement>;\n  private metaSchema: JSONSchema4 | null;\n  private editorInstance: monaco.editor.IStandaloneCodeEditor | null;\n  private vimMode: any;\n  private statusNode: HTMLElement | null;\n  constructor(props: IProps) {\n    super(props);\n    this.monaco = React.createRef();\n    this.metaSchema = null;\n    this.editorInstance = null;\n    this.addCommands = this.addCommands.bind(this);\n    this.vimMode = null;\n    this.statusNode = null;\n  }\n\n  public async componentDidMount() {\n    const existingModels = monaco.editor.getModels().length > 0;\n    let model;\n\n    if (!existingModels) {\n      /* tslint:disable */\n      /* tslint:enable */\n      const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n\n      this.metaSchema = schema as JSONSchema4;\n      const defaultV = _.isEmpty(this.props.defaultValue) ? null\n        : JSON.stringify(this.props.defaultValue, undefined, \"  \");\n      const ex = examplesList.find((e) => e.name! === \"petstore\");\n      const defaultSchema = await fetch(ex!.url).then((res) => res.text());\n      const localStorageSchema = window.localStorage.getItem(\"schema\");\n      let defaultValue = (defaultV || localStorageSchema || defaultSchema).trim();\n\n      if (defaultValue === \"{}\" || defaultValue === \"\") {\n        defaultValue = defaultSchema;\n      }\n\n      model = monaco.editor.createModel(defaultValue, \"json\", modelUri);\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            fileMatch: [\"*\"],\n            schema,\n            uri: modelUri.toString(),\n          },\n        ],\n        validate: true,\n      });\n      model.updateOptions({ tabSize: 2 });\n    } else {\n      model = monaco.editor.getModels()[0];\n    }\n\n    const options = {\n      language: \"json\",\n      options: {\n        autoIndent: true,\n        formatOnPaste: true,\n        formatOnType: true,\n      },\n      theme: this.props.uiSchema.appBar[\"ui:darkMode\"] ? \"vs-dark\" : \"vs\",\n    };\n\n    if (this.monaco && this.monaco.current) {\n      this.editorInstance = monaco.editor.create(this.monaco.current, {\n        ...options,\n      });\n      this.editorInstance.setModel(model);\n      this.editorInstance.setSelection(new monaco.Selection(4, 13, 4, 13));\n\n      this.editorInstance.focus();\n      window.onresize = () => this.editorInstance && this.editorInstance.layout();\n      setTimeout(() => this.editorInstance && this.editorInstance.layout(), 1000);\n\n      this.editorInstance.onDidChangeModelContent(() => {\n        const changedSchema = this.editorInstance && this.editorInstance.getValue();\n        if (changedSchema) {\n          window.localStorage.setItem(\"schema\", changedSchema);\n          this.props.onChange(changedSchema);\n        }\n      });\n      this.props.onCreate(this.editorInstance);\n    }\n\n    this.addCommands(this.editorInstance);\n  }\n  public addCommands(editor: monaco.editor.IStandaloneCodeEditor | null) {\n    if (!editor) { return; }\n\n    // reset editor to empty schema\n\n    /* tslint:disable */\n    // replace schema:\n    // Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: \"replace-meta-schema\",\n\n      // A label of the action that will be presented to the user.\n      label: \"Replace Meta Schema\",\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R),\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          const metaSchema = JSON.parse(result);\n          this.metaSchema = metaSchema;\n        }\n        if (result != null) {\n          const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n          monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            enableSchemaRequest: true,\n            schemas: [\n              {\n                fileMatch: [\"*\"],\n                schema: this.metaSchema,\n                uri: modelUri.toString(),\n              },\n            ],\n            validate: true,\n          });\n        }\n      },\n    });\n\n    // Vim Mode:\n    // Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: \"vim-mode\",\n\n      // A label of the action that will be presented to the user.\n      label: \"Vim Mode\",\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        // chord\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V),\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        this.onVimKeybind();\n      },\n    });\n    /* tslint:enable */\n  }\n  public onChange() {\n    if (this.props.onChangeMarkers) {\n      this.props.onChangeMarkers(monaco.editor.getModelMarkers({}));\n    }\n  }\n  public componentWillUnmount() {\n    if (this.editorInstance) {\n      this.editorInstance.dispose();\n    }\n  }\n  public onVimKeybind() {\n    if (this.vimMode) {\n      this.vimMode.dispose();\n      if (this.statusNode) {\n        this.statusNode.innerHTML = \"\";\n      }\n      this.vimMode = null;\n      return;\n    }\n    this.statusNode = document.getElementById(\"vim-status-bar\");\n    this.vimMode = initVimMode(this.editorInstance, this.statusNode);\n    return;\n  }\n  public render() {\n    return (\n      <>\n        <div style={{ height: \"100%\" }} ref={this.monaco} />\n        <div id=\"vim-status-bar\" style={{ position: \"fixed\", bottom: \"0\", background: \"white\", opacity: 0.5 }}></div>\n      </>\n    );\n  }\n}\n","export default async (schemaUrl: string) => {\n  try {\n    const response = await fetch(schemaUrl);\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to download openrpc.json file located at the url: ${schemaUrl}`);\n  }\n};\n","let idCounter = 0;\nexport default async (url: string) => {\n  try {\n    const response = await fetch(url, {\n      body: JSON.stringify({\n        id: idCounter++,\n        jsonrpc: \"2.0\",\n        method: \"rpc.discover\",\n        params: [],\n      }),\n      headers: {\"Content-Type\": \"application/json\"},\n      method: \"POST\",\n    });\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to call rpc.discover at: ${url}`);\n  }\n};\n","import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component, ChangeEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { IUISchema } from \"../UISchema\";\nimport {isEmpty} from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success= \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  uiSchema?: IUISchema;\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n uiSchema?: IUISchema;\n onClose: any;\n variant: NotificationType;\n className: string;\n message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n      open\n      autoHideDuration={10000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}>\n      <SnackBarContentWrapper\n      onClose={close}\n      variant={notification.type}\n      message={<span>{notification.message}</span>}\n      className={classes.margin}\n      />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import React, { Component, ChangeEvent } from \"react\";\nimport Downshift from \"downshift\";\nimport {\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Paper,\n  Menu,\n  MenuItem,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\nimport suggestions from \"../examplesList\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\n\nfunction getSuggestion(query: string | null) {\n  if (!query) {\n    return suggestions;\n  }\n  return suggestions.filter((value) => {\n    return value.name.includes(query) || value.url.includes(query);\n  });\n}\n\nclass SearchBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes, onSplitViewChange, onDarkModeChange } = this.props;\n    return (\n      <Downshift onInputValueChange={this.props.onChangeUrl} id=\"downshift\">\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem,\n          openMenu,\n          clearSelection,\n        }) => (\n            <div>\n              <InputBase\n                {...getInputProps({\n                  onChange: (e) => {\n                    if (e.target.value === \"\") {\n                      clearSelection();\n                    }\n                  },\n                })}\n                onFocus={(event: any) => openMenu()}\n                placeholder={uiSchema && uiSchema.appBar[\"ui:inputPlaceholder\"]}\n                style={{ width: \"100%\" }}\n              />\n              <div {...getMenuProps()} style={{ position: \"absolute\", zIndex: 1 }}>\n                {isOpen ? (\n                  <Paper style={{ maxWidth: \"640px\" }}>\n                    {getSuggestion(inputValue).map((suggestion: any, index: number) => {\n                      const isSelected = highlightedIndex === index;\n                      return (\n                        <MenuItem\n                          {...getItemProps({ item: suggestion.url })}\n                          key={suggestion.url}\n                          selected={isSelected}\n                          component=\"div\"\n                          style={{\n                            fontWeight: isSelected ? 500 : 400,\n                          }}\n                        >\n                          <Grid container spacing={0}>\n                            <Grid item xs={12}>\n                              <Typography variant=\"subheading\">{suggestion.name}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Typography variant=\"caption\">{suggestion.url}</Typography>\n                            </Grid>\n                          </Grid>\n                        </MenuItem>\n                      );\n                    })}\n                  </Paper>\n                ) : null}\n              </div>\n            </div>\n          )}\n      </Downshift>\n    );\n  }\n}\nexport default withStyles(styles)(SearchBar);\n","import React, { Component, ChangeEvent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  IconButton,\n  Paper,\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n} from \"@material-ui/core\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport { IUISchema } from \"../UISchema\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes, onSplitViewChange, onDarkModeChange } = this.props;\n    return (\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Grid alignItems=\"center\" container spacing={24}>\n            <Grid item xs={6} sm={3} direction=\"row\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={7}>\n                {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:input\"] &&\n                  <Paper style={{\n                    background: \"rgba(0, 0, 0, 0.1)\",\n                    padding: \"0px 10px 0px 10px\",\n                    width: \"100%\",\n                  }} elevation={0}>\n                    <SearchBar onChangeUrl={this.props.onChangeUrl} uiSchema={uiSchema} />\n                  </Paper>\n                }\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={2} container justify=\"flex-end\">\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:splitView\"] ?\n                  <FullscreenIcon onClick={() => onSplitViewChange(false)} />\n                  :\n                  <VerticalSplitIcon onClick={() => onSplitViewChange(true)} />\n                }\n              </IconButton>\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:darkMode\"] ?\n                  <Brightness3Icon onClick={() => onDarkModeChange(false)} />\n                  :\n                  <WbSunnyIcon onClick={() => onDarkModeChange(true)} />\n                }\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const lightTheme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#212121\",\n      paper: \"black\",\n    },\n  },\n  overrides: {\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: \"#fff\",\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport MonacoJSONEditor from \"./MonacoJSONEditor\";\nimport refParser from \"json-schema-ref-parser\";\nimport * as monaco from \"monaco-editor\";\nimport Documentation from \"@open-rpc/docs-react\";\nimport { debounce, isEmpty } from \"lodash\";\nimport \"./App.css\";\nimport fetchUrlSchemaFile from \"./fetchUrlSchemaFile\";\nimport fetchSchemaFromRpcDiscover from \"./fetchSchemaFromRpcDiscover\";\nimport AppBar from \"./AppBar/AppBar\";\nimport * as qs from \"qs\";\nimport { OpenRPC } from \"@open-rpc/meta-schema\";\nimport { IUISchema } from \"./UISchema\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"./SnackBar/SnackBar\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./themes/openrpcTheme\";\nimport SplitPane from \"react-split-pane\";\nimport { Paper, CssBaseline } from \"@material-ui/core\";\n\ninterface IState {\n  markers: any[];\n  notification: ISnackBarNotification;\n  defaultValue: string;\n  parsedSchema: OpenRPC;\n  reactJsonOptions: any;\n  uiSchema: IUISchema;\n}\n\nexport default class App extends React.Component<{}, IState> {\n  private debouncedHandleUrlChange: any;\n  private editorInstance?: monaco.editor.IStandaloneCodeEditor;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      defaultValue: \"\",\n      markers: [],\n      notification: {} as ISnackBarNotification,\n      parsedSchema: {} as OpenRPC,\n      reactJsonOptions: {\n        theme: \"summerfruit:inverted\",\n        collapseStringsAfterLength: 25,\n        displayDataTypes: false,\n        displayObjectSize: false,\n        indentWidth: 2,\n        name: false,\n      },\n      uiSchema: {\n        appBar: {\n          \"ui:input\": true,\n          \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n          /* tslint:disable */\n          \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n          /* tslint:enable */\n          \"ui:splitView\": true,\n          \"ui:darkMode\": false,\n          \"ui:title\": \"OpenRPC Playground\",\n        },\n        methods: {\n          \"ui:defaultExpanded\": false,\n        },\n        params: {\n          \"ui:defaultExpanded\": false,\n        },\n      },\n    };\n    this.refreshEditorData = this.refreshEditorData.bind(this);\n    this.setMarkers = debounce(this.setMarkers.bind(this), 300);\n    this.debouncedHandleUrlChange = debounce(this.dHandleUrlChange.bind(this), 300);\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n  }\n\n  public setNotification = (notification: ISnackBarNotification) => {\n    this.setState({ notification });\n  }\n  public setErrorNotification = (message: string) => {\n    this.setNotification({ message, type: NotificationType.error });\n  }\n\n  public handleSnackbarClose() {\n    this.setState({ notification: {} as ISnackBarNotification });\n  }\n\n  public dHandleUrlChange = async (jsonOrRPC: string) => {\n    let newSchema;\n    if (isEmpty(jsonOrRPC)) { return; }\n    if (jsonOrRPC.match(/\\.json$/)) {\n      try {\n        newSchema = await fetchUrlSchemaFile(jsonOrRPC);\n      } catch (e) {\n        const msg = `Error fetching schema for: ${jsonOrRPC}`;\n        console.error(msg, e);\n        this.setErrorNotification(msg);\n        return;\n      }\n    } else {\n      try {\n        const rpcResult = await fetchSchemaFromRpcDiscover(jsonOrRPC);\n        newSchema = rpcResult.result;\n      } catch (e) {\n        const msg = `Error fetching rpc.discover for: ${jsonOrRPC}`;\n        console.error(msg, e);\n        this.setErrorNotification(msg);\n        return;\n      }\n    }\n    monaco.editor.getModels()[0].setValue(JSON.stringify(newSchema, undefined, \" \"));\n    this.refreshEditorData();\n    this.setState({\n      ...this.state,\n      defaultValue: newSchema,\n    });\n  }\n\n  public handleUrlChange = (value: any) => this.debouncedHandleUrlChange(value);\n\n  public handleUISchemaAppBarChange = (name: string) => (value: any) => {\n    let reactJsonOptions = this.state.reactJsonOptions;\n    if (name === \"ui:darkMode\") {\n      monaco.editor.setTheme(value ? \"vs-dark\" : \"vs\");\n      reactJsonOptions = {\n        ...this.state.reactJsonOptions,\n        theme: value ? \"summerfruit\" : \"summerfruit:inverted\",\n      };\n    }\n\n    this.setState({\n      ...this.state,\n      reactJsonOptions,\n      uiSchema: {\n        ...this.state.uiSchema,\n        appBar: {\n          ...this.state.uiSchema.appBar,\n          [name]: value,\n        },\n      },\n    });\n  }\n\n  public async componentDidMount() {\n    const urlParams = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n    if (urlParams.schemaUrl) {\n      this.dHandleUrlChange(urlParams.schemaUrl);\n    }\n    if (urlParams.schema) {\n      monaco.editor.getModels()[0].setValue(JSON.stringify(urlParams.schema, undefined, \" \"));\n    }\n    if (urlParams.uiSchema) {\n      this.setState({\n        uiSchema: {\n          appBar: {\n            ...this.state.uiSchema.appBar,\n            ...urlParams.uiSchema.appBar || {},\n          },\n          methods: {\n            ...this.state.uiSchema.methods,\n            ...urlParams.uiSchema.methods || {},\n          },\n          params: {\n            ...this.state.uiSchema.params,\n            ...urlParams.uiSchema.params || {},\n          },\n        },\n      });\n    }\n    setTimeout(this.refreshEditorData, 300);\n    setTimeout(this.refreshEditorData, 2000);\n  }\n\n  public refeshMarkers() {\n    setTimeout(() => {\n      const markers = monaco.editor.getModelMarkers({});\n      this.setState({\n        markers,\n      });\n    }, 1000);\n  }\n  public async refreshEditorData() {\n    let parsedSchema;\n    try {\n      parsedSchema = await refParser.dereference(JSON.parse(monaco.editor.getModels()[0].getValue())) as OpenRPC;\n    } catch (e) {\n      console.error(\"error parsing schema\", e);\n    }\n\n    if (!parsedSchema) {\n      this.refeshMarkers();\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      parsedSchema: parsedSchema || this.state.parsedSchema,\n    });\n\n    this.refeshMarkers();\n  }\n  public setMarkers() {\n    this.refreshEditorData();\n  }\n\n  public render() {\n    return (\n      <MuiThemeProvider theme={this.state.uiSchema.appBar[\"ui:darkMode\"] ? darkTheme : lightTheme}>\n        <CssBaseline />\n        <AppBar\n          uiSchema={this.state.uiSchema}\n          onSplitViewChange={this.handleUISchemaAppBarChange(\"ui:splitView\")}\n          onDarkModeChange={this.handleUISchemaAppBarChange(\"ui:darkMode\")}\n          onChangeUrl={this.handleUrlChange} />\n        {this.getPlayground()}\n        <SnackBar close={this.handleSnackbarClose} notification={this.state.notification} />\n      </MuiThemeProvider>\n    );\n  }\n\n  private getSplitPane() {\n    return (\n      <SplitPane\n        split=\"vertical\"\n        minSize={100}\n        maxSize={-100}\n        defaultSize={window.innerWidth / 2}\n        onChange={(size) => this.editorInstance && this.editorInstance.layout()}>\n        <div key={1} style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }} >\n          <JSONValidationErrorList markers={this.state.markers} />\n          <MonacoJSONEditor\n            uiSchema={this.state.uiSchema}\n            onCreate={(editorInstance: monaco.editor.IStandaloneCodeEditor) => this.editorInstance = editorInstance}\n            defaultValue={this.state.defaultValue}\n            onChange={this.setMarkers.bind(this)} />\n        </div>\n        <div className=\"docs\" key={2}>\n          <Documentation\n            schema={this.state.parsedSchema as OpenRPC}\n            uiSchema={this.state.uiSchema}\n            reactJsonOptions={this.state.reactJsonOptions}\n          />\n        </div>\n      </SplitPane>\n    );\n  }\n\n  private getPlayground = () => {\n    if (!this.state.uiSchema.appBar[\"ui:splitView\"]) {\n      return (\n        <div className=\"docs\" key={2}>\n          <Documentation\n            schema={this.state.parsedSchema as OpenRPC}\n            uiSchema={this.state.uiSchema}\n            reactJsonOptions={this.state.reactJsonOptions}\n          />\n        </div>\n      );\n    } else {\n      return this.getSplitPane();\n    }\n  }\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}