{"version":3,"sources":["JSONValidationErrorList.tsx","MonacoJSONEditor.tsx","fetchUrlSchemaFile.tsx","fetchSchemaFromRpcDiscover.tsx","SnackBar/SnackBar.tsx","SearchBar/SearchBar.tsx","AppBar/AppBar.tsx","themes/openrpcTheme.ts","App.tsx","index.tsx"],"names":["JSONValidationErrorList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","markers","length","react_default","a","createElement","className","wrapper","list","map","marker","key","message","startLineNumber","startColumn","React","Component","withStyles","theme","color","palette","secondary","main","height","listStyle","overflow","maxHeight","empty","require","default","initVimMode","MonacoJSONEditor","monaco","metaSchema","editorInstance","vimMode","statusNode","createRef","addCommands","bind","assertThisInitialized","getModels","model","modelUri","parse","concat","Math","random","schema","defaultV","_","isEmpty","defaultValue","JSON","stringify","undefined","emptySchema","openrpc","info","title","version","methods","localStorageSchema","window","localStorage","getItem","createModel","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","updateOptions","tabSize","options","language","autoIndent","formatOnPaste","formatOnType","uiSchema","appBar","current","create","objectSpread","setModel","setSelection","focus","onresize","_this2","layout","setTimeout","onDidChangeModelContent","changedSchema","getValue","setItem","onChange","onCreate","editor","_this3","addAction","id","label","keybindings","chord","CtrlCmd","KEY_K","KEY_R","contextMenuGroupId","contextMenuOrder","run","ed","result","prompt","KEY_V","onVimKeybind","onChangeMarkers","getModelMarkers","dispose","innerHTML","document","getElementById","Fragment","style","ref","position","bottom","background","opacity","fetchUrlSchemaFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","schemaUrl","response","wrap","_context","prev","next","fetch","sent","abrupt","t0","Error","stop","_x","apply","arguments","idCounter","fetchSchemaFromRpcDiscover","url","body","jsonrpc","method","params","headers","Content-Type","NotificationType","SearchBar","_this$props","onSplitViewChange","onDarkModeChange","downshift_esm","onInputValueChange","onChangeUrl","getInputProps","getItemProps","getMenuProps","getLabelProps","isOpen","inputValue","highlightedIndex","openMenu","selectedItem","clearSelection","index_es","assign","e","target","value","onFocus","event","placeholder","width","zIndex","maxWidth","query","suggestions","name","filter","includes","getSuggestion","suggestion","index","isSelected","item","selected","component","fontWeight","container","spacing","xs","variant","marginLeft","unit","ApplicationBar","elevation","alignItems","sm","direction","alt","src","only","padding","src_SearchBar_SearchBar","justify","Fullscreen_default","onClick","VerticalSplit_default","Brightness3_default","WbSunny_default","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","InfoIcon","debug","SnackBarCntWrapper","onClose","other","objectWithoutProperties","Icon","classNames","aria-describedby","icon","iconVariant","action","IconButton_default","aria-label","close","Close_default","SnackBarContentWrapper","green","backgroundColor","dark","primary","amber","fontSize","marginRight","display","margin","SnackBarWrapper","_this$props2","notification","open","autoHideDuration","anchorOrigin","vertical","horizontal","type","SnackBar","lightTheme","createMuiTheme","overrides","MuiAppBar","root","darkTheme","paper","MuiTable","MuiTypography","App","debouncedHandleUrlChange","setNotification","setState","setErrorNotification","dHandleUrlChange","jsonOrRPC","newSchema","msg","rpcResult","_msg","match","console","t1","setValue","refreshEditorData","handleUrlChange","handleUISchemaAppBarChange","reactJsonOptions","setTheme","defineProperty","getPlayground","getSplitPane","build_default","parsedSchema","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","ui:input","ui:inputPlaceholder","ui:logoUrl","ui:splitView","ui:darkMode","ui:title","ui:defaultExpanded","setMarkers","debounce","handleSnackbarClose","urlParams","qs","location","search","ignoreQueryPrefix","depth","decoder","str","test","parseFloat","decodeURIComponent","refParser","dereference","_context3","refeshMarkers","styles","AppBar","index_esm","split","minSize","maxSize","defaultSize","innerWidth","size","flexDirection","src_JSONValidationErrorList","MonacoJSONEditor_MonacoJSONEditor","ReactDOM","render","App_App"],"mappings":"iRAmBMA,cACJ,SAAAA,EAAYC,GAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACzBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFYP,wEAIX,IACNQ,EAAYL,KAAKJ,MAAjBS,QACR,OAAKL,KAAKJ,MAAMU,SAAyC,IAA9BN,KAAKJ,MAAMU,QAAQC,OAE5CC,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,SACtBJ,EAAAC,EAAAC,cAAA,MAAIC,UAAWN,EAAQQ,MACpBb,KAAKJ,MAAMU,SAAWN,KAAKJ,MAAMU,QAAQQ,IAAI,SAACC,GAC7C,OACEP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,EAAOE,SACbF,EAAOG,gBADV,IAC4BH,EAAOI,YADnC,MACmDJ,EAAOE,aAPC,YAPnCG,IAAMC,WAwB7BC,uBAxCA,SAACC,GAAD,MAAmB,CAChCV,KAAM,CACJW,MAAOD,EAAME,QAAQC,UAAUC,KAC/BC,OAAQ,OACRC,UAAW,OACXC,SAAU,UAEZlB,QAAS,CACPmB,UAAW,WAgCAT,CAAmB3B,+CCzC9BqC,EAAQC,EAAQ,KACpBD,EAAQA,EAAME,YACNC,EAAgBF,EAAQ,KAAxBE,YAgBaC,cAMnB,SAAAA,EAAYxC,GAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACzBvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KANAyC,YAKmB,EAAAxC,EAJnByC,gBAImB,EAAAzC,EAHnB0C,oBAGmB,EAAA1C,EAFnB2C,aAEmB,EAAA3C,EADnB4C,gBACmB,EAEzB5C,EAAKwC,OAASjB,IAAMsB,YACpB7C,EAAKyC,WAAa,KAClBzC,EAAK0C,eAAiB,KACtB1C,EAAK8C,YAAc9C,EAAK8C,YAAYC,KAAjB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAD,KACnBA,EAAK2C,QAAU,KACf3C,EAAK4C,WAAa,KAPO5C,oNAWFwC,SAAcS,YAAYvC,OAAS,EAoCxDwC,EAAQV,SAAcS,YAAY,IA9B5BE,EAAWX,MAAWY,MAAX,aAAAC,OAA8BC,KAAKC,SAAnC,yBAEjBpD,KAAKsC,WAAae,IACZC,EAAWC,IAAEC,QAAQxD,KAAKJ,MAAM6D,cAAgB,KAClDC,KAAKC,UAAU3D,KAAKJ,MAAM6D,kBAAcG,EAAW,MACjDC,EAAcH,KAAKC,UAAU,CACjCG,QAAS,YACTC,KAAM,CACJC,MAAO,GACPC,QAAS,IAEXC,QAAS,SACRN,EAAW,MACRO,EAAqBC,OAAOC,aAAaC,QAAQ,UACjDb,EAAeH,GAAYa,GAAsBN,EAEvDd,EAAQV,SAAckC,YAAYd,EAAc,OAAQT,GACxDX,YAAiBmC,KAAKC,aAAaC,sBAAsB,CACvDC,qBAAqB,EACrBC,QAAS,CACP,CACEC,UAAW,CAAC,KACZxB,WACAyB,IAAK9B,EAAS+B,aAGlBC,UAAU,IAEZjC,EAAMkC,cAAc,CAAEC,QAAS,KAK3BC,EAAU,CACdC,SAAU,OACVD,QAAS,CACPE,YAAY,EACZC,eAAe,EACfC,cAAc,GAEhBhE,MAAOvB,KAAKJ,MAAM4F,SAASC,OAAO,eAAiB,UAAY,MAG7DzF,KAAKqC,QAAUrC,KAAKqC,OAAOqD,UAC7B1F,KAAKuC,eAAiBF,SAAcsD,OAAO3F,KAAKqC,OAAOqD,QAAjC5F,OAAA8F,EAAA,EAAA9F,CAAA,GACjBqF,IAELnF,KAAKuC,eAAesD,SAAS9C,GAC7B/C,KAAKuC,eAAeuD,aAAa,IAAIzD,YAAiB,EAAG,GAAI,EAAG,KAEhErC,KAAKuC,eAAewD,QACpB3B,OAAO4B,SAAW,kBAAMC,EAAK1D,gBAAkB0D,EAAK1D,eAAe2D,UACnEC,WAAW,kBAAMF,EAAK1D,gBAAkB0D,EAAK1D,eAAe2D,UAAU,KAEtElG,KAAKuC,eAAe6D,wBAAwB,WAC1C,IAAMC,EAAgBJ,EAAK1D,gBAAkB0D,EAAK1D,eAAe+D,WAC7DD,IACFjC,OAAOC,aAAakC,QAAQ,SAAUF,GACtCJ,EAAKrG,MAAM4G,SAASH,MAGxBrG,KAAKJ,MAAM6G,SAASzG,KAAKuC,iBAG3BvC,KAAK2C,YAAY3C,KAAKuC,sJAELmE,GAAoD,IAAAC,EAAA3G,KAChE0G,IAQLA,EAAOE,UAAU,CAEfC,GAAI,sBAGJC,MAAO,sBAGPC,YAAa,CACX1E,SAAc2E,MAAM3E,SAAc4E,QAAU5E,UAAe6E,MAAO7E,SAAc4E,QAAU5E,UAAe8E,QAE3GC,mBAAoB,aACpBC,iBAAkB,IAGlBC,IAAK,SAACC,GACJ,IAAMC,EAASpD,OAAOqD,OAAO,8CAA+C,MAC5E,GAAID,EAAQ,CACV,IAAMlF,EAAaoB,KAAKT,MAAMuE,GAC9Bb,EAAKrE,WAAaA,EAEpB,GAAc,MAAVkF,EAAgB,CAClB,IAAMxE,EAAWX,MAAWY,MAAX,aAAAC,OAA8BC,KAAKC,SAAnC,yBACjBf,YAAiBmC,KAAKC,aAAaC,sBAAsB,CACvDC,qBAAqB,EACrBC,QAAS,CACP,CACEC,UAAW,CAAC,KACZxB,OAAQsD,EAAKrE,WACbwC,IAAK9B,EAAS+B,aAGlBC,UAAU,QASlB0B,EAAOE,UAAU,CAEfC,GAAI,WAGJC,MAAO,WAGPC,YAAa,CAEX1E,SAAc2E,MAAM3E,SAAc4E,QAAU5E,UAAe6E,MAAO7E,SAAc4E,QAAU5E,UAAeqF,QAE3GN,mBAAoB,aACpBC,iBAAkB,IAIlBC,IAAK,SAACC,GACJZ,EAAKgB,sDAML3H,KAAKJ,MAAMgI,iBACb5H,KAAKJ,MAAMgI,gBAAgBvF,SAAcwF,gBAAgB,oDAIvD7H,KAAKuC,gBACPvC,KAAKuC,eAAeuF,iDAItB,GAAI9H,KAAKwC,QAMP,OALAxC,KAAKwC,QAAQsF,UACT9H,KAAKyC,aACPzC,KAAKyC,WAAWsF,UAAY,SAE9B/H,KAAKwC,QAAU,MAGjBxC,KAAKyC,WAAauF,SAASC,eAAe,kBAC1CjI,KAAKwC,QAAUL,EAAYnC,KAAKuC,eAAgBvC,KAAKyC,6CAIrD,OACEjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyH,SAAA,KACE1H,EAAAC,EAAAC,cAAA,OAAKyH,MAAO,CAAEvG,OAAQ,QAAUwG,IAAKpI,KAAKqC,SAC1C7B,EAAAC,EAAAC,cAAA,OAAKmG,GAAG,iBAAiBsB,MAAO,CAAEE,SAAU,QAASC,OAAQ,IAAKC,WAAY,QAASC,QAAS,cA7L1DpH,IAAMC,+CCpBpDoH,WAAA,eAAAC,EAAA5I,OAAA6I,EAAA,EAAA7I,CAAA8I,EAAAnI,EAAAoI,KAAe,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAAnI,EAAAwI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEYC,MAAMN,GAFlB,cAELC,EAFKE,EAAAI,KAAAJ,EAAAE,KAAA,EAGEJ,EAASxE,OAHX,cAAA0E,EAAAK,OAAA,SAAAL,EAAAI,MAAA,aAAAJ,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAKL,IAAIO,MAAJ,4DAAAvG,OAAsE6F,IALjE,yBAAAG,EAAAQ,SAAAZ,EAAA9I,KAAA,YAAf,gBAAA2J,GAAA,OAAAjB,EAAAkB,MAAA5J,KAAA6J,YAAA,ICAIC,EAAY,EAChBC,EAAA,eAAArB,EAAA5I,OAAA6I,EAAA,EAAA7I,CAAA8I,EAAAnI,EAAAoI,KAAe,SAAAC,EAAOkB,GAAP,IAAAhB,EAAA,OAAAJ,EAAAnI,EAAAwI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEYC,MAAMW,EAAK,CAChCC,KAAMvG,KAAKC,UAAU,CACnBkD,GAAIiD,IACJI,QAAS,MACTC,OAAQ,eACRC,OAAQ,KAEVC,QAAS,CAACC,eAAgB,oBAC1BH,OAAQ,SAVC,cAELnB,EAFKE,EAAAI,KAAAJ,EAAAE,KAAA,EAYEJ,EAASxE,OAZX,cAAA0E,EAAAK,OAAA,SAAAL,EAAAI,MAAA,aAAAJ,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAcL,IAAIO,MAAJ,mCAAAvG,OAA6C8G,IAdxC,yBAAAd,EAAAQ,SAAAZ,EAAA9I,KAAA,YAAf,gBAAA2J,GAAA,OAAAjB,EAAAkB,MAAA5J,KAAA6J,YAAA,gGC2EYU,ECRNC,mLACY,IAAAC,EACqDzK,KAAKJ,MAAhE4F,EADMiF,EACNjF,SADMiF,EACIpK,QADJoK,EACaC,kBADbD,EACgCE,iBAC9C,OACEnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAWC,mBAAoB7K,KAAKJ,MAAMkL,YAAajE,GAAG,aACvD,SAAA6B,GAAA,IACCqC,EADDrC,EACCqC,cACAC,EAFDtC,EAECsC,aAEAC,GAJDvC,EAGCwC,cAHDxC,EAICuC,cACAE,EALDzC,EAKCyC,OACAC,EAND1C,EAMC0C,WACAC,EAPD3C,EAOC2C,iBAEAC,GATD5C,EAQC6C,aARD7C,EASC4C,UACAE,EAVD9C,EAUC8C,eAVD,OAYGhL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD3L,OAAA4L,OAAA,GACMX,EAAc,CAChBvE,SAAU,SAACmF,GACc,KAAnBA,EAAEC,OAAOC,OACXL,OAJR,CAQEM,QAAS,SAACC,GAAD,OAAgBT,KACzBU,YAAaxG,GAAYA,EAASC,OAAO,uBACzC0C,MAAO,CAAE8D,MAAO,WAElBzL,EAAAC,EAAAC,cAAA,MAAAZ,OAAA4L,OAAA,GAAST,IAAT,CAAyB9C,MAAO,CAAEE,SAAU,WAAY6D,OAAQ,KAC7Df,EACC3K,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAOtD,MAAO,CAAEgE,SAAU,UAnE5C,SAAuBC,GACrB,IAAMC,EAAc,CAClB,CACEC,KAAM,oBACNtC,IAAK,kHAEP,CACEsC,KAAM,eACNtC,IAAK,6GAEP,CACEsC,KAAM,0BACNtC,IAAK,wHAEP,CACEsC,KAAM,oBACNtC,IAAK,kHAEP,CACEsC,KAAM,WACNtC,IAAK,yGAEP,CACEsC,KAAM,cACNtC,IAAK,6GAGT,OAAKoC,EAGEC,EAAYE,OAAO,SAACV,GACzB,OAAOA,EAAMS,KAAKE,SAASJ,IAAUP,EAAM7B,IAAIwC,SAASJ,KAHjDC,EAwCUI,CAAcrB,GAAYtK,IAAI,SAAC4L,EAAiBC,GAC/C,IAAMC,EAAavB,IAAqBsB,EACxC,OACEnM,EAAAC,EAAAC,cAAC+K,EAAA,EAAD3L,OAAA4L,OAAA,GACMV,EAAa,CAAE6B,KAAMH,EAAW1C,MADtC,CAEEhJ,IAAK0L,EAAW1C,IAChB8C,SAAUF,EACVG,UAAU,MACV5E,MAAO,CACL6E,WAAYJ,EAAa,IAAM,OAGjCpM,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMwB,WAAS,EAACC,QAAS,GACvB1M,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMoB,MAAI,EAACM,GAAI,IACb3M,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAY2B,QAAQ,cAAcV,EAAWJ,OAE/C9L,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMoB,MAAI,EAACM,GAAI,IACb3M,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAY2B,QAAQ,WAAWV,EAAW1C,WAOpD,gBAzDI3I,aAiETC,uBAnHA,SAACC,GAAD,MAAmB,CAChCyC,MAAO,CACLqJ,WAAY9L,EAAM2L,QAAQI,MAE5B7H,OAAQ,KA+GKnE,CAAmBkJ,GCjG5B+C,mLACY,IAAA9C,EACqDzK,KAAKJ,MAAhE4F,EADMiF,EACNjF,SAAUnF,EADJoK,EACIpK,QAASqK,EADbD,EACaC,kBAAmBC,EADhCF,EACgCE,iBAC9C,OACEnK,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAQpD,SAAS,SAAS7G,MAAM,UAAUgM,UAAW,EAAG7M,UAAWN,EAAQoF,QACzEjF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACEjL,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMgC,WAAW,SAASR,WAAS,EAACC,QAAS,IAC3C1M,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMoB,MAAI,EAACM,GAAI,EAAGO,GAAI,EAAGC,UAAU,MAAMV,WAAS,GAC/CjN,KAAKJ,MAAM4F,UAAYxF,KAAKJ,MAAM4F,SAASC,QAAUzF,KAAKJ,MAAM4F,SAASC,OAAO,eAC/EjF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACEjL,EAAAC,EAAAC,cAAA,OACEkN,IAAI,mBACJhM,OAAO,KACPiM,IAAK7N,KAAKJ,MAAM4F,SAASC,OAAO,iBAGtCjF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACEjL,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAY9K,UAAWN,EAAQ2D,MAAOoJ,QAAQ,MAC3C5H,GAAYA,EAASC,OAAO,eAInCjF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAQqC,KAAK,MACXtN,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMoB,MAAI,EAACa,GAAI,GACZ1N,KAAKJ,MAAM4F,UAAYxF,KAAKJ,MAAM4F,SAASC,QAAUzF,KAAKJ,MAAM4F,SAASC,OAAO,aAC/EjF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAOtD,MAAO,CACZI,WAAY,qBACZwF,QAAS,oBACT9B,MAAO,QACNuB,UAAW,GACZhN,EAAAC,EAAAC,cAACsN,EAAD,CAAWlD,YAAa9K,KAAKJ,MAAMkL,YAAatF,SAAUA,OAKlEhF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMoB,MAAI,EAACM,GAAI,EAAGO,GAAI,EAAGT,WAAS,EAACgB,QAAQ,YACzCzN,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACGjG,GAAYA,EAASC,OAAO,gBAC3BjF,EAAAC,EAAAC,cAACwN,EAAAzN,EAAD,CAAgB0N,QAAS,kBAAMzD,GAAkB,MAEjDlK,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAmB0N,QAAS,kBAAMzD,GAAkB,OAGxDlK,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACGjG,GAAYA,EAASC,OAAO,eAC3BjF,EAAAC,EAAAC,cAAC2N,EAAA5N,EAAD,CAAiB0N,QAAS,kBAAMxD,GAAiB,MAEjDnK,EAAAC,EAAAC,cAAC4N,EAAA7N,EAAD,CAAa0N,QAAS,kBAAMxD,GAAiB,kBA/ClCtJ,aAyDdC,uBAxEA,SAACC,GAAD,MAAmB,CAChCyC,MAAO,CACLqJ,WAAY9L,EAAM2L,QAAQI,MAE5B7H,OAAQ,KAoEKnE,CAAmBiM,+MFzE5BgB,GAAc,CAClBC,QAASC,KACTC,QAASC,KACTC,MAAOC,KACP9K,KAAM+K,KACNC,MAAOD,gBAmDGvE,sGA2BNyE,oLACY,IAAAvE,EACsDzK,KAAKJ,MAAjES,EADMoK,EACNpK,QAASM,EADH8J,EACG9J,UAAWM,EADdwJ,EACcxJ,QAASgO,EADvBxE,EACuBwE,QAAS7B,EADhC3C,EACgC2C,QAAY8B,EAD5CpP,OAAAqP,EAAA,EAAArP,CAAA2K,EAAA,uDAER2E,EAAOb,GAAYnB,GACzB,OACE5M,EAAAC,EAAAC,cAAC+K,EAAA,EAAD3L,OAAA4L,OAAA,CACE/K,UAAW0O,KAAWhP,EAAQ+M,GAAUzM,GACxC2O,mBAAiB,kBACjBrO,QACET,EAAAC,EAAAC,cAAA,QAAMmG,GAAG,kBAAkBlG,UAAWN,EAAQY,SAC5CT,EAAAC,EAAAC,cAAC0O,EAAD,CAAMzO,UAAW0O,KAAWhP,EAAQkP,KAAMlP,EAAQmP,eACjDvO,GAGLwO,OAAQ,CACNjP,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACEO,IAAI,QACJ2O,aAAW,QACXnO,MAAM,UACNb,UAAWN,EAAQuP,MACnBzB,QAASc,GAETzO,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,CAAWE,UAAWN,EAAQkP,UAG9BL,WAzBqB9N,IAAMC,WA8BjCyO,GAAyBxO,qBA7FF,SAACC,GAAD,MAAmB,CAC9CiN,QAAS,CACPhN,MAAOuO,KAAM,MAEfnB,MAAO,CACLoB,gBAAiBzO,EAAME,QAAQmN,MAAMqB,MAEvClM,KAAM,CACJvC,MAAOD,EAAME,QAAQyO,QAAQD,MAE/BlB,MAAO,CACLvN,MAAOD,EAAME,QAAQC,UAAUuO,MAEjCvB,QAAS,CACPlN,MAAO2O,KAAM,MAEfZ,KAAM,CACJa,SAAU,IAEZZ,YAAa,CACXhH,QAAS,GACT6H,YAAa9O,EAAM2L,QAAQI,MAE7BrM,QAAS,CACPqP,QAAS,OACT7C,WAAY,UAEdmC,MAAO,CACL7B,QAASxM,EAAM2L,QAAQI,KAAO,GAEhCiD,OAAQ,CACNA,OAAQhP,EAAM2L,QAAQI,QA8DKhM,CAAiC0N,IAE1DwB,oLAEY,IAAAC,EAC2BzQ,KAAKJ,MAAtCS,EADMoQ,EACNpQ,QAASqQ,EADHD,EACGC,aAAcd,EADjBa,EACiBb,MAC/B,OAAIpM,kBAAQkN,GAAwB,KAElClQ,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CACAkF,MAAI,EACJC,iBAAkB,IAClBC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdvQ,EAAAC,EAAAC,cAACoP,GAAD,CACAb,QAASW,EACTxC,QAASsD,EAAaM,KACtB/P,QAAST,EAAAC,EAAAC,cAAA,YAAOgQ,EAAazP,SAC7BN,UAAWN,EAAQkQ,iBAjBKlP,aAuBjB4P,GAAW3P,qBAlIF,SAACC,GAAD,MAAmB,CACvCyC,MAAO,CACLqJ,WAAY9L,EAAM2L,QAAQI,MAE5BsC,MAAO,CACL7B,QAASxM,EAAM2L,QAAQI,KAAO,GAEhCiD,OAAQ,CACNA,OAAQhP,EAAM2L,QAAQI,QA0HFhM,CAA0BkP,IG5JrCU,GAAaC,yBAAe,CACvCC,UAAW,CACTC,UAAW,CACTC,KAAM,CACJ/I,WAAY,qBAIlB9G,QAAS,CACP8G,WAAY,CACVrG,QAAS,WAKFqP,GAAYJ,yBAAe,CACtC1P,QAAS,CACPuP,KAAM,OACNzI,WAAY,CACVrG,QAAS,UACTsP,MAAO,UAGXJ,UAAW,CACTK,SAAU,CACRH,KAAM,CACJ/I,WAAY,2BAGhBmJ,cAAe,CACbJ,KAAM,CACJ9P,MAAO,sBCJMmQ,eAInB,SAAAA,EAAY/R,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2R,IACrB9R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6R,GAAAxR,KAAAH,KAAMJ,KAJAgS,8BAGe,EAAA/R,EAFf0C,oBAEe,EAAA1C,EAwChBgS,gBAAkB,SAACnB,GACxB7Q,EAAKiS,SAAS,CAAEpB,kBAzCK7Q,EA2ChBkS,qBAAuB,SAAC9Q,GAC7BpB,EAAKgS,gBAAgB,CAAE5Q,UAAS+P,KAAMzG,EAAiBqE,SA5ClC/O,EAmDhBmS,iBAnDgB,eAAAtJ,EAAA5I,OAAA6I,EAAA,EAAA7I,CAAA8I,EAAAnI,EAAAoI,KAmDG,SAAAC,EAAOmJ,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzJ,EAAAnI,EAAAwI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEpB5F,kBAAQyO,GAFY,CAAA/I,EAAAE,KAAA,eAAAF,EAAAK,OAAA,qBAGpB0I,EAAUK,MAAM,WAHI,CAAApJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKFX,EAAmBwJ,GALjB,OAKpBC,EALoBhJ,EAAAI,KAAAJ,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAOdiJ,EAPc,8BAAAjP,OAOsB+O,GAC1CM,QAAQ3D,MAAMuD,EAAdjJ,EAAAM,IACA3J,EAAKkS,qBAAqBI,GATNjJ,EAAAK,OAAA,kBAAAL,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAcIW,EAA2BkI,GAd/B,QAcdG,EAdclJ,EAAAI,KAepB4I,EAAYE,EAAU5K,OAfF0B,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAsJ,GAAAtJ,EAAA,UAiBdiJ,EAjBc,oCAAAjP,OAiB4B+O,GAChDM,QAAQ3D,MAAMuD,EAAdjJ,EAAAsJ,IACA3S,EAAKkS,qBAAqBI,GAnBNjJ,EAAAK,OAAA,kBAuBxBlH,SAAcS,YAAY,GAAG2P,SAAS/O,KAAKC,UAAUuO,OAAWtO,EAAW,MAC3E/D,EAAK6S,oBACL7S,EAAKiS,SAALhS,OAAA8F,EAAA,EAAA9F,CAAA,GACKD,EAAKO,MADV,CAEEqD,aAAcyO,KA3BQ,yBAAAhJ,EAAAQ,SAAAZ,EAAA9I,KAAA,oBAnDH,gBAAA2J,GAAA,OAAAjB,EAAAkB,MAAA5J,KAAA6J,YAAA,GAAAhK,EAkFhB8S,gBAAkB,SAAC9G,GAAD,OAAgBhM,EAAK+R,yBAAyB/F,IAlFhDhM,EAoFhB+S,2BAA6B,SAACtG,GAAD,OAAkB,SAACT,GACrD,IAAIgH,EAAmBhT,EAAKO,MAAMyS,iBACrB,gBAATvG,IACFjK,SAAcyQ,SAASjH,EAAQ,UAAY,MAC3CgH,EAAgB/S,OAAA8F,EAAA,EAAA9F,CAAA,GACXD,EAAKO,MAAMyS,iBADA,CAEdtR,MAAOsK,EAAQ,cAAgB,0BAInChM,EAAKiS,SAALhS,OAAA8F,EAAA,EAAA9F,CAAA,GACKD,EAAKO,MADV,CAEEyS,mBACArN,SAAS1F,OAAA8F,EAAA,EAAA9F,CAAA,GACJD,EAAKO,MAAMoF,SADR,CAENC,OAAO3F,OAAA8F,EAAA,EAAA9F,CAAA,GACFD,EAAKO,MAAMoF,SAASC,OADnB3F,OAAAiT,EAAA,EAAAjT,CAAA,GAEHwM,EAAOT,WArGOhM,EAmOfmT,cAAgB,WACtB,OAAKnT,EAAKO,MAAMoF,SAASC,OAAO,gBAWvB5F,EAAKoT,eATVzS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOK,IAAK,GACzBR,EAAAC,EAAAC,cAACwS,EAAAzS,EAAD,CACE4C,OAAQxD,EAAKO,MAAM+S,aACnB3N,SAAU3F,EAAKO,MAAMoF,SACrBqN,iBAAkBhT,EAAKO,MAAMyS,qBAxOrChT,EAAKO,MAAQ,CACXqD,aAAc,GACdnD,QAAS,GACToQ,aAAc,GACdyC,aAAc,GACdN,iBAAkB,CAChBtR,MAAO,uBACP6R,2BAA4B,GAC5BC,kBAAkB,EAClBC,mBAAmB,EACnBC,YAAa,EACbjH,MAAM,GAER9G,SAAU,CACRC,OAAQ,CACN+N,YAAY,EACZC,sBAAuB,sDAEvBC,aAAc,oHAEdC,gBAAgB,EAChBC,eAAe,EACfC,WAAY,sBAEd3P,QAAS,CACP4P,sBAAsB,GAExB1J,OAAQ,CACN0J,sBAAsB,KAI5BjU,EAAK6S,kBAAoB7S,EAAK6S,kBAAkB9P,KAAvB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAD,KACzBA,EAAKkU,WAAaC,mBAASnU,EAAKkU,WAAWnR,KAAhB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAD,KAA4B,KACvDA,EAAK+R,yBAA2BoC,mBAASnU,EAAKmS,iBAAiBpP,KAAtB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAD,KAAkC,KAC3EA,EAAKoU,oBAAsBpU,EAAKoU,oBAAoBrR,KAAzB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAD,KArCNA,qFAgDrBG,KAAK8R,SAAS,CAAEpB,aAAc,gKA4DxBwD,EAAYC,QAAS/P,OAAOgQ,SAASC,OAAQ,CACjDC,mBAAmB,EACnBC,MAAO,IACPC,QAHiD,SAGzCC,GACN,MAAI,mBAAmBC,KAAKD,GACnBE,WAAWF,GAGR,UAARA,IAGQ,SAARA,GAGGG,mBAAmBH,QAGhB1L,WACZ/I,KAAKgS,iBAAiBkC,EAAUnL,WAE9BmL,EAAU7Q,QACZhB,SAAcS,YAAY,GAAG2P,SAAS/O,KAAKC,UAAUuQ,EAAU7Q,YAAQO,EAAW,MAEhFsQ,EAAU1O,UACZxF,KAAK8R,SAAS,CACZtM,SAAU,CACRC,OAAO3F,OAAA8F,EAAA,EAAA9F,CAAA,GACFE,KAAKI,MAAMoF,SAASC,OACpByO,EAAU1O,SAASC,QAAU,IAElCvB,QAAQpE,OAAA8F,EAAA,EAAA9F,CAAA,GACHE,KAAKI,MAAMoF,SAAStB,QACpBgQ,EAAU1O,SAAStB,SAAW,IAEnCkG,OAAOtK,OAAA8F,EAAA,EAAA9F,CAAA,GACFE,KAAKI,MAAMoF,SAAS4E,OACpB8J,EAAU1O,SAAS4E,QAAU,OAKxCjE,WAAWnG,KAAK0S,kBAAmB,KACnCvM,WAAWnG,KAAK0S,kBAAmB,+IAGd,IAAAzM,EAAAjG,KACrBmG,WAAW,WACT,IAAM7F,EAAU+B,SAAcwF,gBAAgB,IAC9C5B,EAAK6L,SAAS,CACZxR,aAED,wLAKoBuU,IAAUC,YAAYpR,KAAKT,MAAMZ,SAAcS,YAAY,GAAGwD,oBAAnF6M,wDAEAZ,QAAQ3D,MAAM,uBAAdmG,EAAAvL,cAGG2J,0BACHnT,KAAKgV,2CAIPhV,KAAK8R,SAALhS,OAAA8F,EAAA,EAAA9F,CAAA,GACKE,KAAKI,MADV,CAEE+S,aAAcA,GAAgBnT,KAAKI,MAAM+S,gBAG3CnT,KAAKgV,gKAGLhV,KAAK0S,qDAIL,OACElS,EAAAC,EAAAC,cAACuU,EAAA,iBAAD,CAAkB1T,MAAOvB,KAAKI,MAAMoF,SAASC,OAAO,eAAiB8L,GAAYL,IAC/E1Q,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,MACAjL,EAAAC,EAAAC,cAACwU,EAAD,CACE1P,SAAUxF,KAAKI,MAAMoF,SACrBkF,kBAAmB1K,KAAK4S,2BAA2B,gBACnDjI,iBAAkB3K,KAAK4S,2BAA2B,eAClD9H,YAAa9K,KAAK2S,kBACnB3S,KAAKgT,gBACNxS,EAAAC,EAAAC,cAACuQ,GAAD,CAAUrB,MAAO5P,KAAKiU,oBAAqBvD,aAAc1Q,KAAKI,MAAMsQ,uDAKnD,IAAA/J,EAAA3G,KACrB,OACEQ,EAAAC,EAAAC,cAACyU,GAAA,EAAD,CACEC,MAAM,WACNC,QAAS,IACTC,SAAU,IACVC,YAAanR,OAAOoR,WAAa,EACjChP,SAAU,SAACiP,GAAD,OAAU9O,EAAKpE,gBAAkBoE,EAAKpE,eAAe2D,WAC/D1F,EAAAC,EAAAC,cAAA,OAAKM,IAAK,EAAGmH,MAAO,CAAEmI,QAAS,OAAQoF,cAAe,SAAU9T,OAAQ,SACtEpB,EAAAC,EAAAC,cAACiV,EAAD,CAAyBrV,QAASN,KAAKI,MAAME,UAC7CE,EAAAC,EAAAC,cAACkV,EAAD,CACEpQ,SAAUxF,KAAKI,MAAMoF,SACrBiB,SAAU,SAAClE,GAAD,OAAyDoE,EAAKpE,eAAiBA,GACzFkB,aAAczD,KAAKI,MAAMqD,aACzB+C,SAAUxG,KAAK+T,WAAWnR,KAAK5C,SAEnCQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOK,IAAK,GACzBR,EAAAC,EAAAC,cAACwS,EAAAzS,EAAD,CACE4C,OAAQrD,KAAKI,MAAM+S,aACnB3N,SAAUxF,KAAKI,MAAMoF,SACrBqN,iBAAkB7S,KAAKI,MAAMyS,4BAhORzR,IAAMC,WCxBvCwU,IAASC,OAAOtV,EAAAC,EAAAC,cAACqV,GAAD,MAAS/N,SAASC,eAAe","file":"static/js/main.416af6a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nclass JSONValidationErrorList extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {};\n  }\n  public render() {\n    const { classes } = this.props;\n    if (!this.props.markers || this.props.markers.length === 0) { return null; }\n    return (\n      <div className={classes.wrapper}>\n        <ul className={classes.list}>\n          {this.props.markers && this.props.markers.map((marker) => {\n            return (\n              <li key={marker.message}>\n                {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","import React, { ReactNode } from \"react\";\n/* tslint:disable */\nlet empty = require(\"json-schema-empty\");\nempty = empty.default;\nconst { initVimMode } = require(\"monaco-vim\");\n/* tslint:enable */\nimport * as monaco from \"monaco-editor\";\nimport _ from \"lodash\";\nimport { JSONSchema4 } from \"json-schema\";\nimport schema from \"@open-rpc/meta-schema\";\nimport { IUISchema } from \"./UISchema\";\n\ninterface IProps {\n  defaultValue?: string;\n  onChangeMarkers?: any;\n  uiSchema: IUISchema;\n  onCreate?: any;\n  onChange?: any;\n}\n\nexport default class MonacoJSONEditor extends React.Component<IProps> {\n  private monaco: React.RefObject<HTMLDivElement>;\n  private metaSchema: JSONSchema4 | null;\n  private editorInstance: monaco.editor.IStandaloneCodeEditor | null;\n  private vimMode: any;\n  private statusNode: HTMLElement | null;\n  constructor(props: IProps) {\n    super(props);\n    this.monaco = React.createRef();\n    this.metaSchema = null;\n    this.editorInstance = null;\n    this.addCommands = this.addCommands.bind(this);\n    this.vimMode = null;\n    this.statusNode = null;\n  }\n\n  public async componentDidMount() {\n    const existingModels = monaco.editor.getModels().length > 0;\n    let model;\n\n    if (!existingModels) {\n      /* tslint:disable */\n      /* tslint:enable */\n      const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n\n      this.metaSchema = schema as JSONSchema4;\n      const defaultV = _.isEmpty(this.props.defaultValue) ? null\n        : JSON.stringify(this.props.defaultValue, undefined, \"  \");\n      const emptySchema = JSON.stringify({\n        openrpc: \"1.0.0-rc1\",\n        info: {\n          title: \"\",\n          version: \"\",\n        },\n        methods: [],\n      }, undefined, \"\\t\");\n      const localStorageSchema = window.localStorage.getItem(\"schema\");\n      const defaultValue = defaultV || localStorageSchema || emptySchema;\n\n      model = monaco.editor.createModel(defaultValue, \"json\", modelUri);\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            fileMatch: [\"*\"],\n            schema,\n            uri: modelUri.toString(),\n          },\n        ],\n        validate: true,\n      });\n      model.updateOptions({ tabSize: 2 });\n    } else {\n      model = monaco.editor.getModels()[0];\n    }\n\n    const options = {\n      language: \"json\",\n      options: {\n        autoIndent: true,\n        formatOnPaste: true,\n        formatOnType: true,\n      },\n      theme: this.props.uiSchema.appBar[\"ui:darkMode\"] ? \"vs-dark\" : \"vs\",\n    };\n\n    if (this.monaco && this.monaco.current) {\n      this.editorInstance = monaco.editor.create(this.monaco.current, {\n        ...options,\n      });\n      this.editorInstance.setModel(model);\n      this.editorInstance.setSelection(new monaco.Selection(4, 13, 4, 13));\n\n      this.editorInstance.focus();\n      window.onresize = () => this.editorInstance && this.editorInstance.layout();\n      setTimeout(() => this.editorInstance && this.editorInstance.layout(), 1000);\n\n      this.editorInstance.onDidChangeModelContent(() => {\n        const changedSchema = this.editorInstance && this.editorInstance.getValue();\n        if (changedSchema) {\n          window.localStorage.setItem(\"schema\", changedSchema);\n          this.props.onChange(changedSchema);\n        }\n      });\n      this.props.onCreate(this.editorInstance);\n    }\n\n    this.addCommands(this.editorInstance);\n  }\n  public addCommands(editor: monaco.editor.IStandaloneCodeEditor | null) {\n    if (!editor) { return; }\n\n    // reset editor to empty schema\n\n    /* tslint:disable */\n    // replace schema:\n    // Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: \"replace-meta-schema\",\n\n      // A label of the action that will be presented to the user.\n      label: \"Replace Meta Schema\",\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R),\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          const metaSchema = JSON.parse(result);\n          this.metaSchema = metaSchema;\n        }\n        if (result != null) {\n          const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n          monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            enableSchemaRequest: true,\n            schemas: [\n              {\n                fileMatch: [\"*\"],\n                schema: this.metaSchema,\n                uri: modelUri.toString(),\n              },\n            ],\n            validate: true,\n          });\n        }\n      },\n    });\n\n    // Vim Mode:\n    // Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: \"vim-mode\",\n\n      // A label of the action that will be presented to the user.\n      label: \"Vim Mode\",\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        // chord\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V),\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        this.onVimKeybind();\n      },\n    });\n    /* tslint:enable */\n  }\n  public onChange() {\n    if (this.props.onChangeMarkers) {\n      this.props.onChangeMarkers(monaco.editor.getModelMarkers({}));\n    }\n  }\n  public componentWillUnmount() {\n    if (this.editorInstance) {\n      this.editorInstance.dispose();\n    }\n  }\n  public onVimKeybind() {\n    if (this.vimMode) {\n      this.vimMode.dispose();\n      if (this.statusNode) {\n        this.statusNode.innerHTML = \"\";\n      }\n      this.vimMode = null;\n      return;\n    }\n    this.statusNode = document.getElementById(\"vim-status-bar\");\n    this.vimMode = initVimMode(this.editorInstance, this.statusNode);\n    return;\n  }\n  public render() {\n    return (\n      <>\n        <div style={{ height: \"100%\" }} ref={this.monaco} />\n        <div id=\"vim-status-bar\" style={{ position: \"fixed\", bottom: \"0\", background: \"white\", opacity: 0.5 }}></div>\n      </>\n    );\n  }\n}\n","export default async (schemaUrl: string) => {\n  try {\n    const response = await fetch(schemaUrl);\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to download openrpc.json file located at the url: ${schemaUrl}`);\n  }\n};\n","let idCounter = 0;\nexport default async (url: string) => {\n  try {\n    const response = await fetch(url, {\n      body: JSON.stringify({\n        id: idCounter++,\n        jsonrpc: \"2.0\",\n        method: \"rpc.discover\",\n        params: [],\n      }),\n      headers: {\"Content-Type\": \"application/json\"},\n      method: \"POST\",\n    });\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to call rpc.discover at: ${url}`);\n  }\n};\n","import {\n  Snackbar,\n  SnackbarContent,\n  WithStyles,\n  withStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { Component, ChangeEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { IUISchema } from \"../UISchema\";\nimport {isEmpty} from \"lodash\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  debug: InfoIcon,\n};\n\nconst styleSnackBar = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst styleSnackBarContent = (theme: Theme) => ({\n  success: {\n    color: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: theme.palette.primary.dark,\n  },\n  debug: {\n    color: theme.palette.secondary.dark,\n  },\n  warning: {\n    color: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n\n});\n\nexport enum NotificationType {\n  error = \"error\",\n  warn = \"warning\",\n  info = \"info\",\n  success= \"success\",\n  debug = \"debug\",\n}\n\ninterface IProps extends WithStyles<typeof styleSnackBar> {\n  uiSchema?: IUISchema;\n  notification: ISnackBarNotification;\n  close: any;\n}\n\ninterface ISnackBarContentProps extends WithStyles<typeof styleSnackBarContent> {\n uiSchema?: IUISchema;\n onClose: any;\n variant: NotificationType;\n className: string;\n message: JSX.Element;\n}\n\nexport interface ISnackBarNotification {\n  type: NotificationType;\n  message: string;\n}\n\nclass SnackBarCntWrapper extends React.Component<ISnackBarContentProps> {\n  public render() {\n    const { classes, className, message, onClose, variant, ...other } = this.props;\n    const Icon = variantIcon[variant];\n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\n}\nconst SnackBarContentWrapper = withStyles(styleSnackBarContent)(SnackBarCntWrapper);\n\nclass SnackBarWrapper extends Component<IProps> {\n\n  public render() {\n    const { classes, notification, close } = this.props;\n    if (isEmpty(notification)) { return null; }\n    return (\n      <Snackbar\n      open\n      autoHideDuration={10000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}>\n      <SnackBarContentWrapper\n      onClose={close}\n      variant={notification.type}\n      message={<span>{notification.message}</span>}\n      className={classes.margin}\n      />\n      </Snackbar>\n    );\n  }\n}\nexport const SnackBar = withStyles(styleSnackBar)(SnackBarWrapper);\n","import React, { Component, ChangeEvent } from \"react\";\nimport Downshift from \"downshift\";\nimport {\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Paper,\n  Menu,\n  MenuItem,\n  Card,\n  CardHeader,\n  Typography,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nfunction getSuggestion(query: string | null) {\n  const suggestions = [\n    {\n      name: \"api-with-examples\",\n      url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/api-with-examples-openrpc.json\", //tslint:disable-line\n    },\n    {\n      name: \"link-example\",\n      url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/link-example-openrpc.json\", //tslint:disable-line\n    },\n    {\n      name: \"params-by-name-petstore\",\n      url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/params-by-name-petstore-openrpc.json\", //tslint:disable-line\n    },\n    {\n      name: \"petstore-expanded\",\n      url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-expanded-openrpc.json\", //tslint:disable-line\n    },\n    {\n      name: \"petstore\",\n      url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/petstore-openrpc.json\", //tslint:disable-line\n    },\n    {\n      name: \"simple-math\",\n      url: \"https://raw.githubusercontent.com/open-rpc/examples/master/service-descriptions/simple-math-openrpc.json\", //tslint:disable-line\n    },\n  ];\n  if (!query) {\n    return suggestions;\n  }\n  return suggestions.filter((value) => {\n    return value.name.includes(query) || value.url.includes(query);\n  });\n}\n\nclass SearchBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes, onSplitViewChange, onDarkModeChange } = this.props;\n    return (\n      <Downshift onInputValueChange={this.props.onChangeUrl} id=\"downshift\">\n        {({\n          getInputProps,\n          getItemProps,\n          getLabelProps,\n          getMenuProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem,\n          openMenu,\n          clearSelection,\n        }) => (\n            <div>\n              <InputBase\n                {...getInputProps({\n                  onChange: (e) => {\n                    if (e.target.value === \"\") {\n                      clearSelection();\n                    }\n                  },\n                })}\n                onFocus={(event: any) => openMenu()}\n                placeholder={uiSchema && uiSchema.appBar[\"ui:inputPlaceholder\"]}\n                style={{ width: \"100%\" }}\n              />\n              <div {...getMenuProps()} style={{ position: \"absolute\", zIndex: 1 }}>\n                {isOpen ? (\n                  <Paper style={{ maxWidth: \"640px\" }}>\n                    {getSuggestion(inputValue).map((suggestion: any, index: number) => {\n                      const isSelected = highlightedIndex === index;\n                      return (\n                        <MenuItem\n                          {...getItemProps({ item: suggestion.url })}\n                          key={suggestion.url}\n                          selected={isSelected}\n                          component=\"div\"\n                          style={{\n                            fontWeight: isSelected ? 500 : 400,\n                          }}\n                        >\n                          <Grid container spacing={0}>\n                            <Grid item xs={12}>\n                              <Typography variant=\"subheading\">{suggestion.name}</Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Typography variant=\"caption\">{suggestion.url}</Typography>\n                            </Grid>\n                          </Grid>\n                        </MenuItem>\n                      );\n                    })}\n                  </Paper>\n                ) : null}\n              </div>\n            </div>\n          )}\n      </Downshift>\n    );\n  }\n}\nexport default withStyles(styles)(SearchBar);\n","import React, { Component, ChangeEvent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  IconButton,\n  Paper,\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n} from \"@material-ui/core\";\nimport VerticalSplitIcon from \"@material-ui/icons/VerticalSplit\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport { IUISchema } from \"../UISchema\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n  appBar: {\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  onChangeUrl?: any;\n  onDarkModeChange?: any;\n  onSplitViewChange?: any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes, onSplitViewChange, onDarkModeChange } = this.props;\n    return (\n      <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Grid alignItems=\"center\" container spacing={24}>\n            <Grid item xs={6} sm={3} direction=\"row\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={7}>\n                {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:input\"] &&\n                  <Paper style={{\n                    background: \"rgba(0, 0, 0, 0.1)\",\n                    padding: \"0px 10px 0px 10px\",\n                    width: \"100%\",\n                  }} elevation={0}>\n                    <SearchBar onChangeUrl={this.props.onChangeUrl} uiSchema={uiSchema} />\n                  </Paper>\n                }\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={2} container justify=\"flex-end\">\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:splitView\"] ?\n                  <FullscreenIcon onClick={() => onSplitViewChange(false)} />\n                  :\n                  <VerticalSplitIcon onClick={() => onSplitViewChange(true)} />\n                }\n              </IconButton>\n              <IconButton>\n                {uiSchema && uiSchema.appBar[\"ui:darkMode\"] ?\n                  <Brightness3Icon onClick={() => onDarkModeChange(false)} />\n                  :\n                  <WbSunnyIcon onClick={() => onDarkModeChange(true)} />\n                }\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const lightTheme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#212121\",\n      paper: \"black\",\n    },\n  },\n  overrides: {\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: \"#fff\",\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport MonacoJSONEditor from \"./MonacoJSONEditor\";\nimport refParser from \"json-schema-ref-parser\";\nimport * as monaco from \"monaco-editor\";\nimport Documentation from \"@open-rpc/docs-react\";\nimport { debounce, isEmpty } from \"lodash\";\nimport \"./App.css\";\nimport fetchUrlSchemaFile from \"./fetchUrlSchemaFile\";\nimport fetchSchemaFromRpcDiscover from \"./fetchSchemaFromRpcDiscover\";\nimport AppBar from \"./AppBar/AppBar\";\nimport * as qs from \"qs\";\nimport { OpenRPC } from \"@open-rpc/meta-schema\";\nimport { IUISchema } from \"./UISchema\";\nimport { SnackBar, ISnackBarNotification, NotificationType } from \"./SnackBar/SnackBar\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./themes/openrpcTheme\";\nimport SplitPane from \"react-split-pane\";\nimport { Paper, CssBaseline } from \"@material-ui/core\";\n\ninterface IState {\n  markers: any[];\n  notification: ISnackBarNotification;\n  defaultValue: string;\n  parsedSchema: OpenRPC;\n  reactJsonOptions: any;\n  uiSchema: IUISchema;\n}\n\nexport default class App extends React.Component<{}, IState> {\n  private debouncedHandleUrlChange: any;\n  private editorInstance?: monaco.editor.IStandaloneCodeEditor;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      defaultValue: \"\",\n      markers: [],\n      notification: {} as ISnackBarNotification,\n      parsedSchema: {} as OpenRPC,\n      reactJsonOptions: {\n        theme: \"summerfruit:inverted\",\n        collapseStringsAfterLength: 25,\n        displayDataTypes: false,\n        displayObjectSize: false,\n        indentWidth: 2,\n        name: false,\n      },\n      uiSchema: {\n        appBar: {\n          \"ui:input\": true,\n          \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n          /* tslint:disable */\n          \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n          /* tslint:enable */\n          \"ui:splitView\": true,\n          \"ui:darkMode\": false,\n          \"ui:title\": \"OpenRPC Playground\",\n        },\n        methods: {\n          \"ui:defaultExpanded\": false,\n        },\n        params: {\n          \"ui:defaultExpanded\": false,\n        },\n      },\n    };\n    this.refreshEditorData = this.refreshEditorData.bind(this);\n    this.setMarkers = debounce(this.setMarkers.bind(this), 300);\n    this.debouncedHandleUrlChange = debounce(this.dHandleUrlChange.bind(this), 300);\n    this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n  }\n\n  public setNotification = (notification: ISnackBarNotification) => {\n    this.setState({ notification });\n  }\n  public setErrorNotification = (message: string) => {\n    this.setNotification({ message, type: NotificationType.error });\n  }\n\n  public handleSnackbarClose() {\n    this.setState({ notification: {} as ISnackBarNotification });\n  }\n\n  public dHandleUrlChange = async (jsonOrRPC: string) => {\n    let newSchema;\n    if (isEmpty(jsonOrRPC)) { return; }\n    if (jsonOrRPC.match(/\\.json$/)) {\n      try {\n        newSchema = await fetchUrlSchemaFile(jsonOrRPC);\n      } catch (e) {\n        const msg = `Error fetching schema for: ${jsonOrRPC}`;\n        console.error(msg, e);\n        this.setErrorNotification(msg);\n        return;\n      }\n    } else {\n      try {\n        const rpcResult = await fetchSchemaFromRpcDiscover(jsonOrRPC);\n        newSchema = rpcResult.result;\n      } catch (e) {\n        const msg = `Error fetching rpc.discover for: ${jsonOrRPC}`;\n        console.error(msg, e);\n        this.setErrorNotification(msg);\n        return;\n      }\n    }\n    monaco.editor.getModels()[0].setValue(JSON.stringify(newSchema, undefined, \" \"));\n    this.refreshEditorData();\n    this.setState({\n      ...this.state,\n      defaultValue: newSchema,\n    });\n  }\n\n  public handleUrlChange = (value: any) => this.debouncedHandleUrlChange(value);\n\n  public handleUISchemaAppBarChange = (name: string) => (value: any) => {\n    let reactJsonOptions = this.state.reactJsonOptions;\n    if (name === \"ui:darkMode\") {\n      monaco.editor.setTheme(value ? \"vs-dark\" : \"vs\");\n      reactJsonOptions = {\n        ...this.state.reactJsonOptions,\n        theme: value ? \"summerfruit\" : \"summerfruit:inverted\",\n      };\n    }\n\n    this.setState({\n      ...this.state,\n      reactJsonOptions,\n      uiSchema: {\n        ...this.state.uiSchema,\n        appBar: {\n          ...this.state.uiSchema.appBar,\n          [name]: value,\n        },\n      },\n    });\n  }\n\n  public async componentDidMount() {\n    const urlParams = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n    if (urlParams.schemaUrl) {\n      this.dHandleUrlChange(urlParams.schemaUrl);\n    }\n    if (urlParams.schema) {\n      monaco.editor.getModels()[0].setValue(JSON.stringify(urlParams.schema, undefined, \" \"));\n    }\n    if (urlParams.uiSchema) {\n      this.setState({\n        uiSchema: {\n          appBar: {\n            ...this.state.uiSchema.appBar,\n            ...urlParams.uiSchema.appBar || {},\n          },\n          methods: {\n            ...this.state.uiSchema.methods,\n            ...urlParams.uiSchema.methods || {},\n          },\n          params: {\n            ...this.state.uiSchema.params,\n            ...urlParams.uiSchema.params || {},\n          },\n        },\n      });\n    }\n    setTimeout(this.refreshEditorData, 300);\n    setTimeout(this.refreshEditorData, 2000);\n  }\n\n  public refeshMarkers() {\n    setTimeout(() => {\n      const markers = monaco.editor.getModelMarkers({});\n      this.setState({\n        markers,\n      });\n    }, 1000);\n  }\n  public async refreshEditorData() {\n    let parsedSchema;\n    try {\n      parsedSchema = await refParser.dereference(JSON.parse(monaco.editor.getModels()[0].getValue())) as OpenRPC;\n    } catch (e) {\n      console.error(\"error parsing schema\", e);\n    }\n\n    if (!parsedSchema) {\n      this.refeshMarkers();\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      parsedSchema: parsedSchema || this.state.parsedSchema,\n    });\n\n    this.refeshMarkers();\n  }\n  public setMarkers() {\n    this.refreshEditorData();\n  }\n\n  public render() {\n    return (\n      <MuiThemeProvider theme={this.state.uiSchema.appBar[\"ui:darkMode\"] ? darkTheme : lightTheme}>\n        <CssBaseline />\n        <AppBar\n          uiSchema={this.state.uiSchema}\n          onSplitViewChange={this.handleUISchemaAppBarChange(\"ui:splitView\")}\n          onDarkModeChange={this.handleUISchemaAppBarChange(\"ui:darkMode\")}\n          onChangeUrl={this.handleUrlChange} />\n        {this.getPlayground()}\n        <SnackBar close={this.handleSnackbarClose} notification={this.state.notification} />\n      </MuiThemeProvider>\n    );\n  }\n\n  private getSplitPane() {\n    return (\n      <SplitPane\n        split=\"vertical\"\n        minSize={100}\n        maxSize={-100}\n        defaultSize={window.innerWidth / 2}\n        onChange={(size) => this.editorInstance && this.editorInstance.layout()}>\n        <div key={1} style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }} >\n          <JSONValidationErrorList markers={this.state.markers} />\n          <MonacoJSONEditor\n            uiSchema={this.state.uiSchema}\n            onCreate={(editorInstance: monaco.editor.IStandaloneCodeEditor) => this.editorInstance = editorInstance}\n            defaultValue={this.state.defaultValue}\n            onChange={this.setMarkers.bind(this)} />\n        </div>\n        <div className=\"docs\" key={2}>\n          <Documentation\n            schema={this.state.parsedSchema as OpenRPC}\n            uiSchema={this.state.uiSchema}\n            reactJsonOptions={this.state.reactJsonOptions}\n          />\n        </div>\n      </SplitPane>\n    );\n  }\n\n  private getPlayground = () => {\n    if (!this.state.uiSchema.appBar[\"ui:splitView\"]) {\n      return (\n        <div className=\"docs\" key={2}>\n          <Documentation\n            schema={this.state.parsedSchema as OpenRPC}\n            uiSchema={this.state.uiSchema}\n            reactJsonOptions={this.state.reactJsonOptions}\n          />\n        </div>\n      );\n    } else {\n      return this.getSplitPane();\n    }\n  }\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}