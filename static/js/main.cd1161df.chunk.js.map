{"version":3,"sources":["JSONValidationErrorList.tsx","MonacoJSONEditor.tsx","fetchUrlSchemaFile.tsx","fetchSchemaFromRpcDiscover.tsx","AppBar/AppBar.tsx","App.tsx","index.tsx"],"names":["JSONValidationErrorList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","markers","length","react_default","a","createElement","className","wrapper","list","map","marker","key","message","startLineNumber","startColumn","React","Component","withStyles","theme","color","palette","secondary","main","height","listStyle","overflow","maxHeight","empty","require","default","initVimMode","MonacoJSONEditor","monaco","metaSchema","editorInstance","vimMode","statusNode","createRef","addCommands","bind","assertThisInitialized","getModels","model","modelUri","parse","concat","Math","random","schema","defaultV","_","isEmpty","defaultValue","JSON","stringify","undefined","emptySchema","openrpc","info","title","version","methods","localStorageSchema","window","localStorage","getItem","createModel","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","updateOptions","tabSize","options","language","autoIndent","formatOnPaste","formatOnType","current","create","objectSpread","setModel","setSelection","focus","onresize","_this2","layout","setTimeout","onDidChangeModelContent","changedSchema","getValue","setItem","onChange","editor","_this3","addAction","id","label","keybindings","chord","CtrlCmd","KEY_K","KEY_R","contextMenuGroupId","contextMenuOrder","run","ed","result","prompt","KEY_V","onVimKeybind","onChangeMarkers","getModelMarkers","dispose","innerHTML","document","getElementById","Fragment","style","ref","position","bottom","background","opacity","fetchUrlSchemaFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","schemaUrl","response","wrap","_context","prev","next","fetch","sent","abrupt","t0","Error","stop","_x","apply","arguments","idCounter","fetchSchemaFromRpcDiscover","url","body","jsonrpc","method","params","headers","Content-Type","ApplicationBar","_this$props","uiSchema","index_es","justify","alignItems","container","spacing","item","xs","sm","direction","appBar","alt","src","variant","only","padding","width","elevation","onChangeUrl","placeholder","marginLeft","control","checked","onSplitViewChange","value","unit","App","debouncedHandleUrlChange","dHandleUrlChange","jsonOrRPC","newSchema","rpcResult","match","console","error","t1","setValue","refreshEditorData","setState","handleUrlChange","event","target","handleUISchemaAppBarChange","name","defineProperty","parsedSchema","reactJsonOptions","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","ui:inputPlaceholder","ui:logoUrl","ui:splitView","ui:title","ui:defaultExpanded","setMarkers","debounce","urlParams","qs","location","search","ignoreQueryPrefix","depth","decoder","str","test","parseFloat","decodeURIComponent","refParser","dereference","_context3","refeshMarkers","AppBar","display","flexDirection","src_JSONValidationErrorList","MonacoJSONEditor_MonacoJSONEditor","build_default","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.cd1161df.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles, Theme, WithStyles } from \"@material-ui/core\";\n\nconst styles = (theme: Theme) => ({\n  list: {\n    color: theme.palette.secondary.main,\n    height: \"100%\",\n    listStyle: \"none\",\n    overflow: \"scroll\",\n  },\n  wrapper: {\n    maxHeight: \"200px\",\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  markers: any[];\n}\n\nclass JSONValidationErrorList extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {};\n  }\n  public render() {\n    const { classes } = this.props;\n    if (!this.props.markers || this.props.markers.length === 0) { return null; }\n    return (\n      <div className={classes.wrapper}>\n        <ul className={classes.list}>\n          {this.props.markers && this.props.markers.map((marker) => {\n            return (\n              <li key={marker.message}>\n                {marker.startLineNumber}:{marker.startColumn} - {marker.message}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(JSONValidationErrorList);\n","import React, { ReactNode } from \"react\";\n/* tslint:disable */\nlet empty = require(\"json-schema-empty\");\nempty = empty.default;\nconst { initVimMode } = require(\"monaco-vim\");\n/* tslint:enable */\nimport * as monaco from \"monaco-editor\";\nimport fetchUrlSchemaFile from \"./fetchUrlSchemaFile\";\nimport _ from \"lodash\";\nimport { JSONSchema4 } from \"json-schema\";\nimport schema from \"@open-rpc/meta-schema\";\n\ninterface IProps {\n  defaultValue?: string;\n  onChangeMarkers?: any;\n  onChange?: any;\n}\n\nexport default class MonacoJSONEditor extends React.Component<IProps> {\n  private monaco: React.RefObject<HTMLDivElement>;\n  private metaSchema: JSONSchema4 | null;\n  private editorInstance: monaco.editor.IStandaloneCodeEditor | null;\n  private vimMode: any;\n  private statusNode: HTMLElement | null;\n  constructor(props: IProps) {\n    super(props);\n    this.monaco = React.createRef();\n    this.metaSchema = null;\n    this.editorInstance = null;\n    this.addCommands = this.addCommands.bind(this);\n    this.vimMode = null;\n    this.statusNode = null;\n  }\n\n  public async componentDidMount() {\n    const existingModels = monaco.editor.getModels().length > 0;\n    let model;\n\n    if (!existingModels) {\n      /* tslint:disable */\n      /* tslint:enable */\n      const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n\n      this.metaSchema = schema as JSONSchema4;\n      const defaultV = _.isEmpty(this.props.defaultValue) ? null\n        : JSON.stringify(this.props.defaultValue, undefined, \"  \");\n      const emptySchema = JSON.stringify({\n        openrpc: \"1.0.0-rc1\",\n        info: {\n          title: \"\",\n          version: \"\",\n        },\n        methods: [],\n      }, undefined, \"\\t\");\n      const localStorageSchema = window.localStorage.getItem(\"schema\");\n      const defaultValue = defaultV || localStorageSchema || emptySchema;\n\n      model = monaco.editor.createModel(defaultValue, \"json\", modelUri);\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            fileMatch: [\"*\"],\n            schema,\n            uri: modelUri.toString(),\n          },\n        ],\n        validate: true,\n      });\n      model.updateOptions({ tabSize: 2 });\n    } else {\n      model = monaco.editor.getModels()[0];\n    }\n\n    const options = {\n      language: \"json\",\n      options: {\n        autoIndent: true,\n        formatOnPaste: true,\n        formatOnType: true,\n      },\n      theme: \"vs-dark\",\n    };\n\n    if (this.monaco && this.monaco.current) {\n      this.editorInstance = monaco.editor.create(this.monaco.current, {\n        ...options,\n      });\n      this.editorInstance.setModel(model);\n      this.editorInstance.setSelection(new monaco.Selection(4, 13, 4, 13));\n\n      this.editorInstance.focus();\n      window.onresize = () => this.editorInstance && this.editorInstance.layout();\n      setTimeout(() => this.editorInstance && this.editorInstance.layout(), 1000);\n\n      this.editorInstance.onDidChangeModelContent(() => {\n        const changedSchema = this.editorInstance && this.editorInstance.getValue();\n        if (changedSchema) {\n          window.localStorage.setItem(\"schema\", changedSchema);\n          this.props.onChange(changedSchema);\n        }\n      });\n    }\n\n    this.addCommands(this.editorInstance);\n  }\n  public addCommands(editor: monaco.editor.IStandaloneCodeEditor | null) {\n    if (!editor) { return; }\n\n    // reset editor to empty schema\n\n    /* tslint:disable */\n    // replace schema:\n    // Press Chord Ctrl-K, Ctrl-R => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: \"replace-meta-schema\",\n\n      // A label of the action that will be presented to the user.\n      label: \"Replace Meta Schema\",\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_R),\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        const result = window.prompt(\"Paste schema to replace current meta schema\", \"{}\");\n        if (result) {\n          const metaSchema = JSON.parse(result);\n          this.metaSchema = metaSchema;\n        }\n        if (result != null) {\n          const modelUri = monaco.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n          monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            enableSchemaRequest: true,\n            schemas: [\n              {\n                fileMatch: [\"*\"],\n                schema: this.metaSchema,\n                uri: modelUri.toString(),\n              },\n            ],\n            validate: true,\n          });\n        }\n      },\n    });\n\n    // Vim Mode:\n    // Press Chord Ctrl-K, Ctrl-V => the action will run if it is enabled\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: \"vim-mode\",\n\n      // A label of the action that will be presented to the user.\n      label: \"Vim Mode\",\n\n      // An optional array of keybindings for the action.\n      keybindings: [\n        // chord\n        monaco.KeyMod.chord(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K, monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_V),\n      ],\n      contextMenuGroupId: \"navigation\",\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: (ed) => {\n        this.onVimKeybind();\n      },\n    });\n    /* tslint:enable */\n  }\n  public onChange() {\n    if (this.props.onChangeMarkers) {\n      this.props.onChangeMarkers(monaco.editor.getModelMarkers({}));\n    }\n  }\n  public componentWillUnmount() {\n    if (this.editorInstance) {\n      this.editorInstance.dispose();\n    }\n  }\n  public onVimKeybind() {\n    if (this.vimMode) {\n      this.vimMode.dispose();\n      if (this.statusNode) {\n        this.statusNode.innerHTML = \"\";\n      }\n      this.vimMode = null;\n      return;\n    }\n    this.statusNode = document.getElementById(\"vim-status-bar\");\n    this.vimMode = initVimMode(this.editorInstance, this.statusNode);\n    return;\n  }\n  public render() {\n    return (\n      <>\n        <div style={{ height: \"100%\" }} ref={this.monaco} />\n        <div id=\"vim-status-bar\" style={{ position: \"fixed\", bottom: \"0\", background: \"white\", opacity: 0.5 }}></div>\n      </>\n    );\n  }\n}\n","import { types } from \"@open-rpc/meta-schema\";\n\nexport default async (schemaUrl: string) => {\n  try {\n    const response = await fetch(schemaUrl);\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to download openrpc.json file located at the url: ${schemaUrl}`);\n  }\n};\n","let idCounter = 0;\nexport default async (url: string) => {\n  try {\n    const response = await fetch(url, {\n      body: JSON.stringify({\n        id: idCounter++,\n        jsonrpc: \"2.0\",\n        method: \"rpc.discover\",\n        params: [],\n      }),\n      headers: {\"Content-Type\": \"application/json\"},\n      method: \"POST\",\n    });\n    return await response.json();\n  } catch (e) {\n    throw new Error(`Unable to call rpc.discover at: ${url}`);\n  }\n};\n","import React, { Component, ChangeEvent } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Grid,\n  Paper,\n  FormControlLabel,\n  Checkbox,\n  InputBase,\n  Theme,\n  WithStyles,\n  withStyles,\n  Hidden,\n} from \"@material-ui/core\";\nimport { IUISchema } from \"../UISchema\";\n\nconst styles = (theme: Theme) => ({\n  title: {\n    marginLeft: theme.spacing.unit,\n  },\n});\n\ninterface IProps extends WithStyles<typeof styles> {\n  uiSchema?: IUISchema;\n  onChangeUrl?: any;\n  onSplitViewChange?: any;\n}\n\nclass ApplicationBar extends Component<IProps> {\n  public render() {\n    const { uiSchema, classes } = this.props;\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid justify=\"space-evenly\" alignItems=\"center\" container spacing={24}>\n            <Grid item xs={6} sm={3} direction=\"row\" justify=\"flex-start\" container>\n              {this.props.uiSchema && this.props.uiSchema.appBar && this.props.uiSchema.appBar[\"ui:logoUrl\"] &&\n                <Grid>\n                  <img\n                    alt=\"playground-title\"\n                    height=\"30\"\n                    src={this.props.uiSchema.appBar[\"ui:logoUrl\"]} />\n                </Grid>\n              }\n              <Grid>\n                <Typography className={classes.title} variant=\"h6\">\n                  {uiSchema && uiSchema.appBar[\"ui:title\"]}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={7}>\n                <Paper style={{\n                  background: \"rgba(0, 0, 0, 0.1)\",\n                  padding: \"0px 10px 0px 10px\",\n                  width: \"100%\",\n                }} elevation={0}>\n                  <InputBase\n                    style={{ width: \"100%\" }}\n                    onChange={this.props.onChangeUrl}\n                    placeholder={this.props.uiSchema && this.props.uiSchema.appBar[\"ui:inputPlaceholder\"]}\n                  />\n                </Paper>\n              </Grid>\n            </Hidden>\n            <Grid item xs={6} sm={2} alignItems=\"flex-end\">\n              <FormControlLabel\n                style={{ marginLeft: \"30px\", height: \"30px\" }}\n                control={\n                  <Checkbox\n                    checked={this.props.uiSchema && !!this.props.uiSchema.appBar[\"ui:splitView\"]}\n                    onChange={this.props.onSplitViewChange}\n                    value=\"splitView\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Split View\"\n              />\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\nexport default withStyles(styles)(ApplicationBar);\n","import React from \"react\";\nimport JSONValidationErrorList from \"./JSONValidationErrorList\";\nimport MonacoJSONEditor from \"./MonacoJSONEditor\";\nimport refParser from \"json-schema-ref-parser\";\nimport * as monaco from \"monaco-editor\";\nimport Documentation from \"@open-rpc/docs-react\";\nimport { debounce } from \"lodash\";\nimport \"./App.css\";\nimport fetchUrlSchemaFile from \"./fetchUrlSchemaFile\";\nimport fetchSchemaFromRpcDiscover from \"./fetchSchemaFromRpcDiscover\";\nimport AppBar from \"./AppBar/AppBar\";\nimport * as qs from \"qs\";\nimport { types } from \"@open-rpc/meta-schema\";\nimport { IUISchema } from \"./UISchema\";\n\ninterface IState {\n  markers: any[];\n  defaultValue: string;\n  parsedSchema: types.OpenRPC;\n  reactJsonOptions: any;\n  uiSchema: IUISchema;\n}\n\nexport default class App extends React.Component<{}, IState> {\n  private debouncedHandleUrlChange: any;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      defaultValue: \"\",\n      markers: [],\n      parsedSchema: {} as types.OpenRPC,\n      reactJsonOptions: {\n        collapseStringsAfterLength: 25,\n        displayDataTypes: false,\n        displayObjectSize: false,\n        indentWidth: 2,\n        name: false,\n      },\n      uiSchema: {\n        appBar: {\n          \"ui:inputPlaceholder\": \"Enter OpenRPC Document Url or rpc.discover Endpoint\",\n          /* tslint:disable */\n          \"ui:logoUrl\": \"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\",\n          /* tslint:enable */\n          \"ui:splitView\": true,\n          \"ui:title\": \"OpenRPC Playground\",\n        },\n        methods: {\n          \"ui:defaultExpanded\": false,\n        },\n        params: {\n          \"ui:defaultExpanded\": false,\n        },\n      },\n    };\n    this.refreshEditorData = this.refreshEditorData.bind(this);\n    this.setMarkers = debounce(this.setMarkers.bind(this), 300);\n    this.debouncedHandleUrlChange = debounce(this.dHandleUrlChange.bind(this), 300);\n  }\n  public dHandleUrlChange = async (jsonOrRPC: string) => {\n    let newSchema;\n    if (jsonOrRPC.match(/\\.json$/)) {\n      try {\n        newSchema = await fetchUrlSchemaFile(jsonOrRPC);\n      } catch (e) {\n        console.error(`error fetching schema for: ${jsonOrRPC}`, e);\n        return;\n      }\n    } else {\n      try {\n        const rpcResult = await fetchSchemaFromRpcDiscover(jsonOrRPC);\n        newSchema = rpcResult.result;\n      } catch (e) {\n        console.error(`error fetching rpc.discover for: ${jsonOrRPC}`, e);\n        return;\n      }\n    }\n    monaco.editor.getModels()[0].setValue(JSON.stringify(newSchema, undefined, \" \"));\n    this.refreshEditorData();\n    this.setState({\n      ...this.state,\n      defaultValue: newSchema,\n    });\n  }\n\n  public handleUrlChange = (event: any) => this.debouncedHandleUrlChange(event.target.value);\n\n  public handleUISchemaAppBarChange = (name: string) => (event: any) => {\n    this.setState({\n      ...this.state,\n      uiSchema: {\n        ...this.state.uiSchema,\n        appBar: {\n          ...this.state.uiSchema.appBar,\n          [name]: event.target.checked,\n        },\n      },\n    });\n  }\n\n  public async componentDidMount() {\n    const urlParams = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n        }\n\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n    if (urlParams.schemaUrl) {\n      this.dHandleUrlChange(urlParams.schemaUrl);\n    }\n    if (urlParams.schema) {\n      monaco.editor.getModels()[0].setValue(JSON.stringify(urlParams.schema, undefined, \" \"));\n    }\n    if (urlParams.uiSchema) {\n      this.setState({\n        uiSchema: {\n          ...this.state.uiSchema,\n          ...urlParams.uiSchema,\n        },\n      });\n    }\n    setTimeout(this.refreshEditorData, 300);\n    setTimeout(this.refreshEditorData, 2000);\n  }\n\n  public refeshMarkers() {\n    setTimeout(() => {\n      const markers = monaco.editor.getModelMarkers({});\n      this.setState({\n        markers,\n      });\n    }, 1000);\n  }\n  public async refreshEditorData() {\n    let parsedSchema;\n    try {\n      parsedSchema = await refParser.dereference(JSON.parse(monaco.editor.getModels()[0].getValue())) as types.OpenRPC;\n    } catch (e) {\n      console.error(\"error parsing schema\", e);\n    }\n\n    if (!parsedSchema) {\n      this.refeshMarkers();\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      parsedSchema: parsedSchema || this.state.parsedSchema,\n    });\n\n    this.refeshMarkers();\n  }\n  public setMarkers() {\n    this.refreshEditorData();\n  }\n  public render() {\n    return (\n      <>\n        <AppBar\n          uiSchema={this.state.uiSchema}\n          onSplitViewChange={this.handleUISchemaAppBarChange(\"ui:splitView\")}\n          onChangeUrl={this.handleUrlChange} />\n        <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n          {this.state.uiSchema.appBar[\"ui:splitView\"] &&\n            <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\", width: \"50%\" }} >\n              <JSONValidationErrorList markers={this.state.markers} />\n              <MonacoJSONEditor\n                defaultValue={this.state.defaultValue}\n                onChange={this.setMarkers.bind(this)} />\n            </div>\n          }\n          <div className=\"docs\">\n            <Documentation\n              schema={this.state.parsedSchema as types.OpenRPC}\n              uiSchema={this.state.uiSchema}\n              reactJsonOptions={this.state.reactJsonOptions}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}